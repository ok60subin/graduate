;#include <delay.h>
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;
;#define m0_on PORTA&=0xFE
;#define m1_on PORTA&=0xFD
;#define m2_on PORTA&=0xFB
;#define m3_on PORTA&=0xF7
;
;#define m0_off PORTA|=0x01
;#define m1_off PORTA|=0x02
;#define m2_off PORTA|=0x04
;#define m3_off PORTA|=0x08
;
;#define m0_t PORTA^=0x01
;#define m1_t PORTA^=0x02
;#define m2_t PORTA^=0x04
;#define m3_t PORTA^=0x08
;
;#define g1_on TIMSK|=0x10
;#define g2_on TIMSK|=0x08
;
;#define g1_off TIMSK&=0xEF
;#define g2_off TIMSK&=0xF7
;
;#define forward PORTB|=0x10 //PORTB4=1
;#define backward PORTB&=0xEF //PORTB4=0
;
;#define buzzer_on  PORTA|=0x10 //PORTA4=1      0001 0000
;#define buzzer_off  PORTA&=0xEF //PORTA4=0      1110 1111
;#define buzzer_t PORTA^=0x10
;
;unsigned int PAUSE=20000; //디스펜서까지의 거리
;unsigned int ENDLINE=48000; //끝까지의 스텝수 저장 상수
;unsigned int ONE=6000; //한 알  스텝 수 저장 상수
;unsigned int NEXT=2000; //약통의 다음칸으로 이동할 스텝수 저장 상수
;
;unsigned int step1=0; //디스펜서의 현재 스텝 저장 변수
;unsigned int step2=0; //이동모터의 현재 스텝 저장 변수
;
;unsigned char start=0;
;unsigned int where2=0;
;unsigned int target=0;
;unsigned int position=0; //현재 위치
;
;unsigned int txdata=0; //시리얼 통신의 송신데이터 저장 변수
;unsigned char rxdata=0; //시리얼 통신의 수신데이터 저장 변수
;unsigned char pill0[3]={0,0,0}; //[현재 몇 알 줬는지, 한번에 몇 알, 하루에 몇 번] 순으로 저장
;unsigned char pill1[3]={0,0,0};
;unsigned char pill2[3]={0,0,0};
;unsigned char unit[3]={0,0,0}; //[약 종류, 한 번에 몇 알, 하루에 몇 번] 순으로 저장
;unsigned char index=0;
;
;unsigned int sp1=1400;

	.DSEG
;unsigned int sp2=1400;
;
;void init(){
; 0000 0039 void init(){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 003A     unsigned char i;
; 0000 003B     txdata=0;
;PCODE: $0000000F VOL: 0
;	i -> R17
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 003C     rxdata=0;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 003D     step1=0;
;PCODE: $00000014 VOL: 0
; 0000 003E     step2=0;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 003F     m0_off;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0040     m1_off;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0041     m2_off;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0042     m3_off;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0043     g1_off;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0044     g2_off;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0045     index=0;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0046     for(i=0; i<3; i++)
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0047     {
; 0000 0048         pill0[i]=0;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0049         pill1[i]=0;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 004A         pill2[i]=0;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 004B     }
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 004C }
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;void BTinit(void)
; 0000 004E {
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 004F     UCSR0A=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0050     UCSR0B=0x98;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0051     UCSR0C=0x06;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0052     UBRR0H=0;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0053     UBRR0L=103;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0054 }
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;
;void transmit() //after setting txdata
; 0000 0057 {
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0058      UCSR0B |= 0x20;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0059      delay_ms(10);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 005A }
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;void string(char *str)
; 0000 005C {
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 005D     unsigned int i=0;
; 0000 005E     for(i=0; str[i]; i++)
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;	*str -> Y+2
;	i -> R16,R17
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 005F     {
; 0000 0060         txdata=str[i];
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0061         transmit();
;PCODE: $00000077 VOL: 0
; 0000 0062         delay_ms(10);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0063     }
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0064 }
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;void beep(unsigned int n){
; 0000 0065 void beep(unsigned int n){
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0066     buzzer_on;
;PCODE: $00000089 VOL: 0
;	n -> Y+0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0067     delay_ms(n);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0068     buzzer_off;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0069 }
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;void vel_f5()
; 0000 006B {
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 006C     OCR1AH=(sp1>>8);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 006D     OCR1AL=sp1;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 006E     OCR1BH=(sp2>>8);
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 006F     OCR1BL=sp2;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0070 }
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;
;void wait(unsigned int t)
; 0000 0073 {
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0074     t*=3;
;PCODE: $000000A3 VOL: 0
;	t -> Y+0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0075     t/=4;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0076     delay_ms(t);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0077 }
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;void motor0()
; 0000 0079 {
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 007A     m0_on;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 007B     g1_on;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 007C }
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;void motor1()
; 0000 007E {
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 007F     m1_on;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 0080     g1_on;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0081 }
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;void motor2()
; 0000 0083 {
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0084     m2_on;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0085     g1_on;
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 0086 
; 0000 0087 }
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;void motor3()
; 0000 0089 {
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 008A     m3_on;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 008B     g2_on;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 008C }
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;void give0() //timer1a
; 0000 008E {
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 008F     for(pill0[0]=0;pill0[0]<pill0[1];pill0[0]++)      //[한번에 먹는 약만큼]
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0090     {
; 0000 0091         motor0();
;PCODE: $000000E2 VOL: 0
; 0000 0092         wait(ONE);
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 0093     }
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 0094 }
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;
;void give1()
; 0000 0097 {
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 0098     for(pill1[0]=0;pill1[0]<pill1[1];pill1[0]++)
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 0099     {
; 0000 009A        motor1();
;PCODE: $000000FB VOL: 0
; 0000 009B        wait(ONE);
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 009C     }
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 009D }
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;
;void give2()
; 0000 00A0 {
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 00A1     for(pill2[0]=0;pill2[0]<pill2[1];pill2[0]++)
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00A2     {
; 0000 00A3          motor2();
;PCODE: $00000114 VOL: 0
; 0000 00A4          wait(ONE);
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 00A5     }
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00A6 }
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;
;void go(unsigned int t)
; 0000 00A9 {
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00AA     target=t;
;PCODE: $00000121 VOL: 0
;	t -> Y+0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 00AB     motor3();
;PCODE: $00000124 VOL: 0
; 0000 00AC     wait(t);
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00AD }
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;
;char str2int(char str){ //시리얼 통신의 char data 변환
; 0000 00AF char str2int(char str){
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00B0     if(str=='1') return 1;
;PCODE: $0000012C VOL: 0
;	str -> Y+0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00B1     else if(str=='2') return 2;
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 00B2     else if(str=='3') return 3;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 00B3     else if(str=='0') return 0;
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 00B4 }
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;
;void run(){
; 0000 00B6 void run(){
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 00B7     unsigned char days=0;
; 0000 00B8     unsigned char meals=1;
; 0000 00B9     forward;
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;	days -> R17
;	meals -> R16
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00BA     go(PAUSE);
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 00BB    for(days=0; days<2;days++)//약을 며칠 복용하는지에 따라 다르게 수행
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 00BC     {
; 0000 00BD         for(meals=1; meals<=3; meals++) //아침,점심,저녁 약을 [하루 복용수]에 맞게
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 00BE         {
; 0000 00BF             if (meals<=pill0[2]) give0();  //하루에 몇번 넣었는지가 [하루 복용횟수] 보다 적거나 같을 경우 실행
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 00C0             if (meals<=pill1[2]) give1();
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 00C1             if (meals<=pill2[2]) give2();
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00C2             forward;
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 00C3             beep(500);
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 00C4             go(NEXT); //다음칸으로 이동
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00C5         }
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 00C6         delay_ms(100);
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 00C7         beep(500);
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00C8     }
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 00C9     forward;
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 00CA     go(ENDLINE-position);
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 00CB 
; 0000 00CC     backward;
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 00CD     go(ENDLINE); //back to start point
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
; 0000 00CE     start=0;
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 00CF 
; 0000 00D0 }
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;
;interrupt [USART0_RXC] void usart0_rxc(void) //수신
; 0000 00D3 {
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 00D4     rxdata=UDR0;
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 00D5     switch (rxdata)
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 00D6     {
; 0000 00D7         case 'x':
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 00D8             m0_t;
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 00D9             break;
;PCODE: $000001B0 VOL: 0
; 0000 00DA         case 'y':
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 00DB             m3_t;
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 00DC             break;
;PCODE: $000001B8 VOL: 0
; 0000 00DD         case 'z':
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 00DE             buzzer_t;
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 00DF             break;
;PCODE: $000001C0 VOL: 0
; 0000 00E0         case 's':
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 00E1             init();
;PCODE: $000001C4 VOL: 0
; 0000 00E2             string("1");
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 00E3             break;
;PCODE: $000001C8 VOL: 0
; 0000 00E4         case 'e':
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 00E5             string("5");
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 00E6             start=1;
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 00E7             break;
;PCODE: $000001D1 VOL: 0
; 0000 00E8         case 'a':
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 00E9         case 'b':
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 00EA         case 'c':
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 00EB             unit[index]=rxdata;
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 00EC             index++;
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 00ED             string("2");
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 00EE             break;
;PCODE: $000001EA VOL: 0
; 0000 00EF         case '0':
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 00F0         case '1':
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 00F1         case '2':
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 00F2         case '3':
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 00F3             unit[index]=rxdata;
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 00F4             index++;
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 00F5             string("3");
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 00F6             if(index==3)
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
; 0000 00F7             {
; 0000 00F8                 index=0;
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 00F9                 switch(unit[0])
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 00FA                 {
; 0000 00FB                     case 'a' :
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
; 0000 00FC                         pill0[1]=str2int(unit[1]);
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0000 00FD                         pill0[2]=str2int(unit[2]);
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 00FE                         break;
;PCODE: $0000021B VOL: 0
; 0000 00FF                     case 'b' :
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0100                         pill1[1]=str2int(unit[1]);
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
; 0000 0101                         pill1[2]=str2int(unit[2]);
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
; 0000 0102                         break;
;PCODE: $00000229 VOL: 0
; 0000 0103                     case 'c':
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 0104                         pill2[1]=str2int(unit[1]);
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
; 0000 0105                         pill2[2]=str2int(unit[2]);
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0000 0106                         break;
;PCODE: $00000237 VOL: 0
; 0000 0107                 }
;PCODE: $00000238 VOL: 0
; 0000 0108                 string("4");
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0000 0109              }
; 0000 010A              break;
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 010B     }
;PCODE: $0000023E VOL: 0
; 0000 010C }
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0

	.DSEG
_0x2B:
	.BYTE 0xA
;
;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
; 0000 010F {

	.CSEG
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 0110     step1++;
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0000 0111     if(step1>=ONE)
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
; 0000 0112     {
; 0000 0113         m0_off;
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 0114         m1_off;
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 0115         m2_off;
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
; 0000 0116         g1_off; //disable ocie1a
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
; 0000 0117         step1=0;
;PCODE: $00000253 VOL: 0
; 0000 0118     }
; 0000 0119 }
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;interrupt [TIM1_COMPB] void timer1_compb_isr(void)
; 0000 011B {
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
; 0000 011C     step2++;
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
; 0000 011D     if(step2>=target)
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 011E     {
; 0000 011F         m3_off;
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 0120         g2_off; //disable ocie1b
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 0121         position+=step2;
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
; 0000 0122         step2=0;
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
; 0000 0123     }
; 0000 0124 }
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;
;interrupt [USART0_DRE] void usart0_dre(void)
; 0000 0127 {
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
; 0000 0128     UDR0=txdata;
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
; 0000 0129     UCSR0B &= 0xDF; // UDRE = 0 USCR0B = 0b10011000
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 012A }
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;
;
;/*
;
;    M        STEP    EN      DIR     TIM
;    0        PB5     PA0     PB3     OC1a
;    1        PB5     PA1     PB3     OC1a
;    2        PB5     PA2     PB3     OC1a
;    3        PB6     PA3     PB4     OC1b
;
;
;*/
;
;void main(void)
; 0000 0139 {
;PCODE: $0000027A VOL: 0
; 0000 013A     DDRE=0b00000010; // 1:txd0 0:rxd0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
; 0000 013B     DDRB=0xFF;   //3,4: dir 5,6: step
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
; 0000 013C     DDRA=0x1F;
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
; 0000 013D     SREG=0x80;
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
; 0000 013E     TCCR1A=0x50; //TIMER1a, TIMER1b on Timer1c off
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
; 0000 013F     TCCR1B=0x0A;
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0000 0140     TCCR1C=0x00;
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0000 0141     OCR1AL=0x00;
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
; 0000 0142     OCR1AH=0x00;
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 0143     OCR1BL=0x00;
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0000 0144     OCR1BH=0x00;
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 0145     OCR1CH=0x00;
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
; 0000 0146     OCR1CL=0x00;
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
; 0000 0147     TCNT1H=0x00;
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
; 0000 0148     TCNT1L=0x00;
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
; 0000 0149     TIMSK=0x00;  //0001 1000 OCIE1A, OCIE1B interrupt enable
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
; 0000 014A     ETIMSK=0x00;
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
; 0000 014B 
; 0000 014C     init();
;PCODE: $0000029D VOL: 0
; 0000 014D     BTinit();
;PCODE: $0000029E VOL: 0
; 0000 014E     vel_f5();
;PCODE: $0000029F VOL: 0
; 0000 014F 
; 0000 0150     while(1){
;PCODE: $000002A0 VOL: 0
; 0000 0151         if(start==1) run();
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
; 0000 0152     }
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
; 0000 0153 }
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
